version: '3.6'
services:
  postgres:
    image: postgres:12
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5555:5432"
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
  graphql-engine:
    image: hasura/graphql-engine:v2.3.0
    ports:
      - "9999:8080"
    depends_on:
      - "postgres"
    restart: always
    environment:
      ## postgres database to store Hasura metadata
      HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:${POSTGRES_PASSWORD}@postgres:5432/postgres"
      # HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
      PG_DATABASE_URL: postgres://postgres:postgrespassword@postgres:5432/postgres
      ## enable the console served by server
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false" # set to "false" to disable console
      ## enable debugging mode. It is recommended to disable this in production
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      ## uncomment next line to set an admin secret
      HASURA_GRAPHQL_ADMIN_SECRET: $HASURA_SECRET
      # HASURA_GRAPHQL_AUTH_HOOK: "http://web:8000/validate_request"
      HASURA_GRAPHQL_JWT_SECRET: '{ "type": "HS256", "key": "${DJANGO_SECRET}" }'
  web:
    build: .
    command: gunicorn blacknotes.wsgi:application --bind 0.0.0.0:8000 --reload #python manage.py runserver 0.0.0.0:8000
    restart: always
    volumes:
      - .:/app
    ports:
      - "7777:8000"
    environment:
      POSTGRES_NAME: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      DJANGO_SECRET: $DJANGO_SECRET
      DJANGO_DEBUG: $DJANGO_DEBUG
      WP_PUBLIC_VAPID_KEY: $WP_PUBLIC_VAPID_KEY
      WP_PRIVATE_VAPID_KEY: $WP_PRIVATE_VAPID_KEY
    depends_on:
      - "postgres"
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  db_data:

